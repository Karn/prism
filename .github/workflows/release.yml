name: Prism Release Workflow
on:
  push:
    branches:
      - main
    paths:
      - 'app/build.gradle.kts'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'workflow_dispatch' || (github.event.action == 'push' && startsWith(github.event.head_commit.message, 'Version bump:')) }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses
        run: yes | sdkmanager --licenses || true

      - name: Assemble release
        run: ./gradlew :app:assembleRelease

      - name: Extract release version
        id: extract-release-version
        run: |
          releaseVersion=$(cat app/build/outputs/apk/release/output-metadata.json| jq -r '.elements[].versionName')
          (if [ "$releaseVersion" = "" ]; then exit 1; fi) && echo "releaseVersion=${releaseVersion}" >> $GITHUB_OUTPUT

      - name: Print release version
        run: echo "releaseVersion=${{ steps.extract-release-version.outputs.releaseVersion }}"

      - name: Upload release artifact to workflow run
        uses: actions/upload-artifact@v4
        with:
          name: prism-release-${{ steps.extract-release-version.outputs.releaseVersion }}.apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Create GitHub release
        run: |
          gh release create v${{ steps.extract-release-version.outputs.releaseVersion }} 'app/build/outputs/apk/release/app-release.apk#prism-${{ steps.extract-release-version.outputs.releaseVersion }}.apk' --target=$GITHUB_SHA -t "v${{ steps.extract-release-version.outputs.releaseVersion }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
